{"remainingRequest":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/babel-loader/lib/index.js!/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/initskus.ts","dependencies":[{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/initskus.ts","mtime":1594444336861},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/.babelrc","mtime":1594434757670},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInOwppbXBvcnQgYXdzU2RrIGZyb20gJ2F3cy1zZGsnOwppbXBvcnQgeyBzdWNjZXNzLCBmYWlsdXJlIH0gZnJvbSAnLi4vbGlicy9yZXNwb25zZSc7IC8vIGltcG9ydCBkeW5hbW9EYiBmcm9tICcuLi9saWJzL2R5bmFtaWMtbGliJzsKCmltcG9ydCB7IER5bmFtb0RCQ2xpZW50IH0gZnJvbSAnLi4vbGlicy9keW5hbWljREJDbGllbnQnOyAvLyBjb25zdCBsb2dnZXIgPSByZXF1aXJlKCcuLi9saWJzL2xvZ2dlcicpOwoKaW1wb3J0IHNrdSBmcm9tICcuLi9tb2RlbHMvc2t1JzsKYXdzU2RrLmNvbmZpZy51cGRhdGUoewogIHJlZ2lvbjogcHJvY2Vzcy5lbnYucmVnaW9uCn0pOwpleHBvcnQgY29uc3QgbWFpbiA9IGFzeW5jIGV2ZW50ID0+IHsKICAvLyBSZXF1ZXN0IGJvZHkgaXMgcGFzc2VkIGluIGFzIGEgSlNPTiBlbmNvZGVkIHN0cmluZyBpbiAnZXZlbnQuYm9keScKICBjb25zdCBpbml0aWFsRGF0YSA9IEpTT04ucGFyc2UoZXZlbnQuYm9keSk7CiAgY29uc29sZS5sb2coJ2V2ZW50ICAgICcsIGV2ZW50LnJlcXVlc3RDb250ZXh0LmlkZW50aXR5KTsKICBjb25zb2xlLmxvZygnaW5pdGlhbERhdGEgICcsIGluaXRpYWxEYXRhKTsKCiAgaWYgKCFpbml0aWFsRGF0YSkgewogICAgcmV0dXJuIGZhaWx1cmUoewogICAgICBzdGF0dXM6IGZhbHNlCiAgICB9KTsKICB9CgogIGNvbnNvbGUubG9nKCdsZW5ndGggb2YgZGF0YScsIGluaXRpYWxEYXRhLmxlbmd0aCk7IC8vIGxvZ2dlci5pbmZvKGBsZW5ndGggb2YgZGF0YSAke2luaXRpYWxEYXRhLmxlbmd0aH1gKTsKCiAgY29uc3Qgc2t1VGFibGVOYW1lID0gcHJvY2Vzcy5lbnYuVEFCTEVfTkFNRTsKICBjb25zdCBzdG9yZSA9IG5ldyBEeW5hbW9EQkNsaWVudCgpOwoKICB0cnkgewogICAgY29uc3Qgc2t1Q2xpZW50ID0gbmV3IHNrdShza3VUYWJsZU5hbWUsIHN0b3JlKTsKICAgIGluaXRpYWxEYXRhLmZvckVhY2goYXN5bmMgZGF0YSA9PiB7CiAgICAgIGF3YWl0IHNrdUNsaWVudC5jcmVhdGUoZGF0YSk7CiAgICB9KTsKICAgIHJldHVybiBzdWNjZXNzKCc8aDE+VGhlIGxpc3Qgb2YgU0tVcyBhcmUgcmV0cmlldmVkIGJ5IEVDb21tZXJjZSBzZXJ2aWNlLjwvaDE+JywgaW5pdGlhbERhdGEpOwogIH0gY2F0Y2ggKGVycikgewogICAgLy8gbG9nZ2VyLmVycm9yKGBlcnJvciBpbiBwdXR0aW5nIHNrdSBpbiBTa3VUYWJsZSAke3NrdVRhYmxlTmFtZX0gJHtlcnJ9YCk7CiAgICByZXR1cm4gZmFpbHVyZSh7CiAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgIG1lc3NhZ2U6IGAke2Vycn1gCiAgICB9KTsKICB9IC8vIGluaXRpYWxEYXRhLmZvckVhY2goYXN5bmMgKGRhdGEpID0+IHsKICAvLyAgIGNvbnN0IHBhcmFtcyA9IHsKICAvLyAgICAgVGFibGVOYW1lOiBza3VUYWJsZU5hbWUsCiAgLy8gICAgIEl0ZW06IHsKICAvLyAgICAgICBza3U6IGRhdGEuc2t1LAogIC8vICAgICAgIG5hbWU6IGRhdGEubmFtZSwKICAvLyAgICAgICBwcmljZTogZGF0YS5wcmljZSwKICAvLyAgICAgICBpbWc6IGRhdGEuaW1nLAogIC8vICAgICAgIGNyZWF0ZWRBdDogRGF0ZS5ub3coKSwKICAvLyAgICAgfSwKICAvLyAgICAgUmV0dXJuVmFsdWVzOiAnQUxMX09MRCcsCiAgLy8gICAgIENvbmRpdGlvbkV4cHJlc3Npb246ICdhdHRyaWJ1dGVfbm90X2V4aXN0cygjZWNvbW1lcmNlLXNlcnZlcmxlc3MtZGV2LXNrdXMuc2t1KScsCiAgLy8gICAgICdFeHByZXNzaW9uQXR0cmlidXRlTmFtZXMnID0+IGFycmF5KCcjaCcgPT4gJ2hhc2gnKQogIC8vICAgfTsKICAvLyAgIHRyeSB7CiAgLy8gICAgIGNvbnN0IHJldFZhbCA9IGF3YWl0IGR5bmFtb0RiLnB1dChwYXJhbXMpOwogIC8vICAgICBjb25zb2xlLmxvZygncmV0VmFsICcsIHJldFZhbCk7CiAgLy8gICB9IGNhdGNoIChlcnJvcikgewogIC8vICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgLy8gICAgIHJldHVybiBmYWlsdXJlKHsgc3RhdHVzOiBmYWxzZSB9KTsKICAvLyAgIH0KICAvLyB9KTsKICAvLyByZXR1cm4gc3VjY2Vzcyhpbml0aWFsRGF0YSk7Cgp9Ow=="},{"version":3,"sources":["/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/initskus.ts"],"names":["awsSdk","success","failure","DynamoDBClient","sku","config","update","region","process","env","main","event","initialData","JSON","parse","body","console","log","requestContext","identity","status","length","skuTableName","TABLE_NAME","store","skuClient","forEach","data","create","err","message"],"mappings":"AAAA,OAAO,6BAAP;AACA,OAAOA,MAAP,MAAmB,SAAnB;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,cAAT,QAA+B,yBAA/B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAEAJ,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqB;AAAEC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYF;AAAtB,CAArB;AAEA,OAAO,MAAMG,IAAI,GAAG,MAAOC,KAAP,IAAuE;AACzF;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,KAAK,CAACO,cAAN,CAAqBC,QAA9C;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,WAA7B;;AACA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAOV,OAAO,CAAC;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACD;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,WAAW,CAACS,MAA1C,EARyF,CASzF;;AACA,QAAMC,YAAoB,GAAGd,OAAO,CAACC,GAAR,CAAYc,UAAzC;AACA,QAAMC,KAAK,GAAG,IAAIrB,cAAJ,EAAd;;AAEA,MAAI;AACF,UAAMsB,SAAS,GAAG,IAAIrB,GAAJ,CAAQkB,YAAR,EAAsBE,KAAtB,CAAlB;AACAZ,IAAAA,WAAW,CAACc,OAAZ,CAAoB,MAAOC,IAAP,IAAsB;AACxC,YAAMF,SAAS,CAACG,MAAV,CAAiBD,IAAjB,CAAN;AACD,KAFD;AAGA,WAAO1B,OAAO,CAAC,+DAAD,EAAkEW,WAAlE,CAAd;AACD,GAND,CAME,OAAOiB,GAAP,EAAY;AACZ;AACA,WAAO3B,OAAO,CAAC;AAAEkB,MAAAA,MAAM,EAAE,KAAV;AAAiBU,MAAAA,OAAO,EAAG,GAAED,GAAI;AAAjC,KAAD,CAAd;AACD,GAtBwF,CAwBzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA/CM","sourcesContent":["import 'source-map-support/register';\nimport awsSdk from 'aws-sdk';\nimport { APIGatewayProxyResult, APIGatewayProxyEvent } from 'aws-lambda';\nimport { success, failure } from '../libs/response';\n// import dynamoDb from '../libs/dynamic-lib';\nimport { DynamoDBClient } from '../libs/dynamicDBClient';\n// const logger = require('../libs/logger');\nimport sku from '../models/sku';\n\nawsSdk.config.update({ region: process.env.region });\n\nexport const main = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n  // Request body is passed in as a JSON encoded string in 'event.body'\n  const initialData = JSON.parse(event.body!);\n  console.log('event    ', event.requestContext.identity);\n  console.log('initialData  ', initialData);\n  if (!initialData) {\n    return failure({ status: false });\n  }\n  console.log('length of data', initialData.length);\n  // logger.info(`length of data ${initialData.length}`);\n  const skuTableName: string = process.env.TABLE_NAME;\n  const store = new DynamoDBClient();\n\n  try {\n    const skuClient = new sku(skuTableName, store);\n    initialData.forEach(async (data: tSku) => {\n      await skuClient.create(data);\n    });\n    return success('<h1>The list of SKUs are retrieved by ECommerce service.</h1>', initialData);\n  } catch (err) {\n    // logger.error(`error in putting sku in SkuTable ${skuTableName} ${err}`);\n    return failure({ status: false, message: `${err}` });\n  }\n\n  // initialData.forEach(async (data) => {\n  //   const params = {\n  //     TableName: skuTableName,\n  //     Item: {\n  //       sku: data.sku,\n  //       name: data.name,\n  //       price: data.price,\n  //       img: data.img,\n  //       createdAt: Date.now(),\n  //     },\n  //     ReturnValues: 'ALL_OLD',\n  //     ConditionExpression: 'attribute_not_exists(#ecommerce-serverless-dev-skus.sku)',\n  //     'ExpressionAttributeNames' => array('#h' => 'hash')\n  //   };\n  //   try {\n  //     const retVal = await dynamoDb.put(params);\n  //     console.log('retVal ', retVal);\n  //   } catch (error) {\n  //     console.log(error);\n  //     return failure({ status: false });\n  //   }\n  // });\n  // return success(initialData);\n};\n"]}]}