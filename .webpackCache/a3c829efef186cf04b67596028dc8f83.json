{"remainingRequest":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/babel-loader/lib/index.js!/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/hello.ts","dependencies":[{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/hello.ts","mtime":1594445495997},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/.babelrc","mtime":1594434757670},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInOwpleHBvcnQgY29uc3QgbWFpbiA9IGFzeW5jICgpID0+IHsKICByZXR1cm4gewogICAgc3RhdHVzQ29kZTogMjAwLAogICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICBtZXNzYWdlOiBgR28gU2VydmVybGVzcyB2MS4wISAke2F3YWl0IG1lc3NhZ2UoewogICAgICAgIHRpbWU6IDEsCiAgICAgICAgY29weTogJ1lvdXIgZnVuY3Rpb24gZXhlY3V0ZWQgc3VjY2Vzc2Z1bGx5IScKICAgICAgfSl9YAogICAgfSkKICB9Owp9OwoKY29uc3QgbWVzc2FnZSA9IHJlc3QgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KCgpID0+IHsKICByZXNvbHZlKGAke3Jlc3QuY29weX0gKHdpdGggYSBkZWxheSlgKTsKfSwgcmVzdC50aW1lICogMTAwMCkpOw=="},{"version":3,"sources":["/Users/rahulgolash/Rahul/Professional/Assignments/ecommerce-serverless/src/handlers/hello.ts"],"names":["main","statusCode","body","JSON","stringify","message","time","copy","rest","Promise","resolve","setTimeout"],"mappings":"AAAA,OAAO,6BAAP;AAEA,OAAO,MAAMA,IAAI,GAAG,YAA0B;AAC5C,SAAO;AACLC,IAAAA,UAAU,EAAE,GADP;AAELC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,OAAO,EAAG,uBAAsB,MAAMA,OAAO,CAAC;AAC5CC,QAAAA,IAAI,EAAE,CADsC;AAE5CC,QAAAA,IAAI,EAAE;AAFsC,OAAD,CAG1C;AAJgB,KAAf;AAFD,GAAP;AASD,CAVM;;AAYP,MAAMF,OAAO,GAAIG,IAAD,IACd,IAAIC,OAAJ,CAAYC,OAAO,IACjBC,UAAU,CAAC,MAAM;AACfD,EAAAA,OAAO,CAAE,GAAEF,IAAI,CAACD,IAAK,iBAAd,CAAP;AACD,CAFS,EAEPC,IAAI,CAACF,IAAL,GAAY,IAFL,CADZ,CADF","sourcesContent":["import 'source-map-support/register';\n\nexport const main = async (): Promise<any> => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: `Go Serverless v1.0! ${await message({\n        time: 1,\n        copy: 'Your function executed successfully!',\n      })}`,\n    }),\n  };\n};\n\nconst message = (rest: IRest) =>\n  new Promise(resolve =>\n    setTimeout(() => {\n      resolve(`${rest.copy} (with a delay)`);\n    }, rest.time * 1000),\n  );\n\ndeclare type IRest = {\n  time: number;\n  copy: string;\n};\n"]}]}